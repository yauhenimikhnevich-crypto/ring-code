import{S as A,a as _,H as B,R as N,b,Q as F}from"./index-BTRt7mjk.js";const L=.7,E=2;function O(t,e){const n=t.length-e;if(n<=0||t.length<e)return null;const c=t.slice(0,n);let r=0;for(let l=0;l<n;l++)r^=c[l];const o=c.filter(l=>l===0).length,s=c.filter(l=>l===255).length;return o>n*.8||s>n*.8?null:c}function C(t){const e=[];for(let n=0;n<t.length;n+=8){let c=0;for(let r=0;r<8;r++)c=c<<1|(n+r<t.length?t[n+r]:0);e.push(c)}return new Uint8Array(e)}function V(t){let e=0;for(const n of t)e+=n;return e&255}function z(){return A.reduce((t,e)=>t+e,0)}function G(){return z()-_.length-B}function $(t,e){const r=(t/2-F)/(e+1),o=[];for(let s=0;s<e;s++){const l=r*s+r*N,f=r*s+r*b;o.push((l+f)/2)}return o}function k(t,e,n,c,r,o,s,l){const h=2*Math.PI/s,i=(1-L)*.5,u=[];for(let a=0;a<s;a++){const g=(a+i+l)*h,p=(a+1-i+l)*h,m=[];for(let d=0;d<=7;d++)m.push(g+(p-g)*(d/7));let I=0,y=0;for(const d of m){const R=Math.cos(d),T=Math.sin(d);for(let x=-E;x<=E;x++){const w=o+x,M=Math.round(c+w*R),v=Math.round(r+w*T);if(M>=0&&M<e&&v>=0&&v<n){const S=(v*e+M)*4;I+=t[S],y++}}}u.push(y>0?I/y:255)}return u}function H(t,e=1){const n=[...t].sort((f,h)=>f-h),c=Math.floor(n.length*.3),r=Math.floor(n.length*.7),o=n[c],s=n[r],l=(o+s)/2*e;return t.map(f=>f<l?1:0)}function P(t,e=1){const n=new Array(256).fill(0),c=t.map(a=>Math.max(0,Math.min(255,Math.round(a))));for(const a of c)n[a]++;let r=0;for(let a=0;a<256;a++)r+=a*n[a];let o=0,s=0,l=0,f=0,h=0;const i=c.length;for(let a=0;a<256;a++){if(s+=n[a],s===0)continue;if(l=i-s,l===0)break;o+=a*n[a];const g=o/s,p=(r-o)/l,m=s*l*(g-p)*(g-p);m>f&&(f=m,h=a)}const u=h*e;return c.map(a=>a<u?1:0)}function K(t){const e=_.length;if(t.length<e+B)return null;const n=t.slice(e,e+B),c=C(n);if(c.length!==7)return null;c[0],c[1];const r=c[2]<<8|c[3],o=c[4]<<8|c[5],s=c[6];if(V(c.subarray(0,6))!==s||r<=0)return null;const l=Math.floor(G()/8);if(r+o>l)return null;const f=e+B,h=(r+o)*8;if(f+h>t.length)return null;const i=t.slice(f,f+h),u=Array.from(C(i));try{const a=O(u,o);if(!a)return null;const g=a.slice(0,r);return new TextDecoder("utf-8",{fatal:!1}).decode(new Uint8Array(g))}catch{return null}}function Q(t){const e=new Uint8ClampedArray(t.data.length);for(let n=0;n<t.data.length;n+=4){const c=.299*t.data[n]+.587*t.data[n+1]+.114*t.data[n+2];e[n]=e[n+1]=e[n+2]=c,e[n+3]=255}return new ImageData(e,t.width,t.height)}function j(t,e=2.5,n=8){const c=t.width,r=t.height,o=new Uint8ClampedArray(t.data.length);o.set(t.data);const s=new Array(256).fill(0);for(let i=0;i<o.length;i+=4)s[o[i]]++;const l=new Array(256).fill(0);l[0]=s[0];for(let i=1;i<256;i++)l[i]=l[i-1]+s[i];const f=c*r,h=l.find(i=>i>0)||0;for(let i=0;i<o.length;i+=4){const u=o[i],a=Math.round((l[u]-h)/(f-h)*255);o[i]=o[i+1]=o[i+2]=a}return new ImageData(o,c,r)}function U(t,e){const n=new Uint8ClampedArray(t.data.length),c=1/Math.max(e,1e-6),r=new Uint8Array(256);for(let o=0;o<256;o++)r[o]=Math.round(Math.pow(o/255,c)*255);for(let o=0;o<t.data.length;o+=4){const s=r[t.data[o]];n[o]=n[o+1]=n[o+2]=s,n[o+3]=255}return new ImageData(n,t.width,t.height)}function X(t){const e=new Uint8ClampedArray(t.data.length);let n=255,c=0;for(let o=0;o<t.data.length;o+=4){const s=t.data[o];s<n&&(n=s),s>c&&(c=s)}const r=c-n;if(r===0)e.set(t.data);else for(let o=0;o<t.data.length;o+=4){const s=Math.round((t.data[o]-n)/r*255);e[o]=e[o+1]=e[o+2]=s,e[o+3]=255}return new ImageData(e,t.width,t.height)}function Z(t){const e=Q(t),n=j(e),c=X(e),r=U(n,.7),o=U(n,1.3);return[e,n,c,r,o]}async function q(t,e){const n=t.width,c=t.height,r=n/2,o=c/2,s=$(Math.min(c,n),A.length),l=Z(t),f=l.length;for(let h=0;h<l.length;h++){const i=l[h];e&&e(h/f*100);for(const u of[!1,!0])for(const a of[1,.95,1.05,.9,1.1])for(const g of["pct","otsu"])for(let p=0;p<A[0];p+=4){const m=[];for(let d=0;d<A.length;d++){const R=A[d],T=p*R/A[0],x=k(i.data,n,c,r,o,s[d],R,T);let w;g==="pct"?w=H(x,a):w=P(x,a),u&&(w=w.map(M=>1-M)),m.push(w)}const I=[];for(const d of m)I.push(...d);const y=K(I);if(y!==null)return console.log(`[OK] decoded v${h} (${u?"INV":"NORM"}, ${g}, bias=${a.toFixed(2)}, s0=${p})`),e&&e(100),y}}return e&&e(100),null}async function W(t,e){return new Promise(n=>{const c=new Image;c.onload=async()=>{const r=document.createElement("canvas");r.width=c.width,r.height=c.height;const o=r.getContext("2d");if(!o){n(null);return}o.drawImage(c,0,0);const s=o.getImageData(0,0,r.width,r.height),l=await q(s,e);n(l)},c.onerror=()=>n(null),c.src=t})}export{W as decodeRingCodeFromDataURL,q as decodeRingCodeFromImage};
